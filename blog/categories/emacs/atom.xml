<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类: emacs | 小明明s à domicile]]></title>
  <link href="http://dongweiming.github.com/blog/blog/categories/emacs/atom.xml" rel="self"/>
  <link href="http://dongweiming.github.com/blog/"/>
  <updated>2015-12-06T23:58:30+08:00</updated>
  <id>http://dongweiming.github.com/blog/</id>
  <author>
    <name><![CDATA[Dongweiming]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[一个使用python的web程序员的emacs.d]]></title>
    <link href="http://dongweiming.github.com/blog/archives/%5B%3F%5D-ge-shi-yong-pythonde-webcheng-xu-yuan-de-emacs-dot-d/"/>
    <updated>2014-08-12T06:49:00+08:00</updated>
    <id>http://dongweiming.github.com/blog/archives/[?]-ge-shi-yong-pythonde-webcheng-xu-yuan-de-emacs-dot-d</id>
    <content type="html"><![CDATA[<h4 id="section">前言</h4>

<p>越来越多的人使用emacs作为开发工具. 甚至skype,gmail,豆瓣FM都能通过emacs.
作为一个产品开发,肯定使用很多插件,设置一些快捷键来提高开发效率.以前一直使用
<a href="https://github.com/bbatsov/prelude">prelude</a>,很久之后发现有以下问题:</p>

<ol>
  <li>比如开启python语言支持需要在prelude-modules.el里面把python这样的注释去掉</li>
  <li>我不需要支持这么多的语言,也不需要那么多快捷键</li>
  <li>aotupair实在太难用了</li>
  <li>scss/css模式不好自定义缩进空格数, tab和空格混用. 不好定制</li>
  <li>看过源码后发现,其实很来很简单粗暴的事情弄得有点复杂了</li>
</ol>

<p>我造了个轮子<a href="https://github.com/dongweiming/emacs.d">.emacs.d</a>,主要针对python和web开发</p>

<h4 id="update">Update</h4>

<p>2014-09-28, 经过这一个月的继续研究,已经有了很大的改变</p>

<h4 id="section-1">项目目录结构</h4>

<p><code>
├── Cask ; 我使用[cask](https://github.com/cask/cask)做包管理工具
├── auto-insert ; 使用auto-insert设置新增elisp/python文件自动添加基于yasnippet的模板
│   ├── elisp-auto-insert
│   └── python-auto-insert
├── custom ; 自定义插件目录,你也可以把你写的程序放进来然后在init.el里面require
│   ├── flycheck.el ; 定制flycheck,让它在保存python程序时自动执行pep8和flake8,有问题的条目会打开新的buffer打印出来
│   └── py-autopep8.el ; 我自己实现了autopep8插件,保存时自动根据pep8标准处理文件
├── functions.el ; 用到的相关函数
├── helper.el ; 我自己写了个类似`C-h b`的介绍绑定的快捷键的预览表
├── hs-minor-mode-conf.el ; python函数/类折叠
├── init.el ; emacs启动的主程序
├── keys.el ; Key-chord配置,默认被注释了,因为它和我经常大片粘贴代码中代码重复造成很多麻烦
├── local-settings.el ; 本机的本地配置,比如用户名,单独的快捷键等
├── misc.el ; 对emacs本身的一些配置
├── mode-mappings.el ; 模式映射,比如Cask会自动用emacs-lisp-mode
├── modeline.el ; 我重新定制了modeline，使用了nyan-mode和powerline,一些加颜色的hack
├── osx.el ; Mac下的一些独立配置,为我的hhkb定制
├── smartparens-config.el ; 定制了smartparens配置
├── tmp
│   └── README.md
└── xiaoming-theme.el ; 我自己写了一个主题,好吧 我就是`小明`
</code></p>

<h4 id="section-2">使用的插件列表</h4>

<ol>
  <li>f - 处理文件相关的库</li>
  <li>s - 处理字符串相关的库</li>
  <li>ag - 据说比ack更快的文本搜索工具<code>the_silver_searcher</code>的emacs插件</li>
  <li>ht - 处理哈希相关的库</li>
  <li>anzu - 显示当前匹配文本，预览替换效果和总匹配数的插件</li>
  <li>dash - 常用函数集合</li>
  <li>helm - 方便查找各种文件内容,buffer切换,emacs命令执行等</li>
  <li>jedi - python代码补全，快速需要函数/模块定义的插件</li>
  <li>smex - M-x 的命令行补全的功能</li>
  <li>direx - 展示目录树</li>
  <li>magit - git插件</li>
  <li>slime - commonlisp交互模式</li>
  <li>ac-js2 - js2-mode支持js函数定义查找</li>
  <li>rinari - 依赖,需要安装</li>
  <li>diff-hl - 在行首用颜色表示git状态-只支持图形界面的emacs</li>
  <li>dired-k - 用带不同颜色的高亮显示文件/目录,大小等信息</li>
  <li>bind-key - 本项目绑定快捷键的用法都根据这个包,没有用global-set-key</li>
  <li>css-mode - css-mode</li>
  <li>js2-mode - js-mode的升级版</li>
  <li>web-mode - 前端开发必备, html缩进,支持根据tag/元素/属性/block/dom跳转,语法高亮,支持mako,jinja2等模板</li>
  <li>git-blame - git-blame,单独版</li>
  <li>key-chord - 可以快速按键达到快捷键的作用</li>
  <li>nyan-mode - 一直可爱的小猫</li>
  <li>plim-mode - 我写的编辑plim的major-mode</li>
  <li>powerline - 提供一个漂亮的状态栏</li>
  <li>sass-mode - 编辑sass</li>
  <li>scss-mode - 编辑scss</li>
  <li>sublimity - 在图形界面的emacs能缩小预览代码-sublime-text有类似的插件</li>
  <li>undo-tree - 让undo可视化</li>
  <li>yaml-mode - 编辑yaml</li>
  <li>yasnippet - 一个神奇的模板系统,定义缩写并通过tab键自动帮你展开(一些自动的”填空题”机制)</li>
  <li>drag-stuff - 可以将代码块整体拖动</li>
  <li>helm-swoop - 项目内关键词查找,并能自动跳到对应文件和对应行</li>
  <li>ibuffer-vc - 支持版本空的ibuffer模式</li>
  <li>projectile - 管理项目，可快速访问项目里任何文件，支持全项目关键词搜索 </li>
  <li>coffee-mode - 编辑coffee</li>
  <li>python-mode - 编辑python</li>
  <li>smartparens - 自动括号匹配,可以按块删除,tag跳转</li>
  <li>use-package - 本项目引用包的方式</li>
  <li>crontab-mode - 高亮编辑crontab</li>
  <li>golden-ratio - 黄金分割展示当前window</li>
  <li>helm-ipython - helm的ipython插件</li>
  <li>rainbow-mode - 在代码中通过背景色标示颜色值</li>
  <li>ace-jump-mode - 快速让光标位置到你想去的地方</li>
  <li>expand-region - 按层次块区域选择</li>
  <li>helm-css-scss - helm的css/scss插件</li>
  <li>markdown-mode - 编辑markdown</li>
  <li>switch-window - 可视化切换窗口</li>
  <li>visual-regexp - 可视化正则匹配</li>
  <li>gitconfig-mode - 单独的gitconfig-mode</li>
  <li>gitignore-mode - 单独的gitignore-mode</li>
  <li>helm-descbinds - 让默认的<code>C-h b</code>高亮并且按组分开</li>
  <li>imenu-anywhere - 类似于etag, 可直接跳到对应的标签</li>
  <li>multiple-cursors - 一次编辑多处/行文字</li>
  <li>discover-my-major - 告诉你当前mode的一些说明/快捷键设置</li>
  <li>virtualenvwrapper - virtualenvwrapper</li>
  <li>gitattributes-mode - 独立的gitattributes-mode</li>
  <li>rainbow-delimiters - 对内嵌的括号等pair符号加不同颜色  </li>
  <li>idle-highlight-mode - 在设置的一段设置时间未操作电脑会自动高亮当前关键词,并且全文高亮相同关键词</li>
  <li>exec-path-from-shell - 可以使用$PATH环境变量</li>
  <li>find-file-in-repository - 根据git属性在项目里查找文件</li>
  <li>emmet-mode - 类似于zencoding，但是能编辑css,使用很少的代码就能构造一个复杂的div/css</li>
  <li>browse-kill-ring - 查看最近操作的删除文本,以及恢复后的效果</li>
</ol>

<h4 id="section-3">安装使用</h4>

<p><code>
curl -fsSkL https://raw.github.com/cask/cask/master/go | python
git clone https://github.com/dongweiming/emacs.d .emacs.d
cd .emacs.d
cask
sudo pip install jedi pep8 autopep8 flake8
</code></p>

<h4 id="section-4">快捷键分布</h4>

<p>请参看项目的<a href="https://github.com/dongweiming/emacs.d/blob/master/README.md">README.md</a></p>
]]></content>
  </entry>
  
</feed>
